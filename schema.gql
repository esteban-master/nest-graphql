# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: String!
  username: String!
  name: String!
  email: String!
  followers: Int!
  following: Int!
  avatar: String
  siteWeb: String
  desc: String
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Login {
  user: User!
  token: String!
}

type Username {
  user: User!
  isFollow: Boolean
}

type Follow {
  user: User
  follow: User
}

type UnFollow {
  user: User
  unFollow: User
}

type Following {
  _id: String!
  follow: User!
  createdAt: DateTime!
  isFollow: Boolean!
}

type FollowingPaginate {
  data: [Following!]!
  nextCursor: String
}

type Follower {
  _id: String!
  userId: User!
  createdAt: DateTime!
  isFollow: Boolean!
}

type FollowersPaginate {
  data: [Follower!]!
  nextCursor: String
}

type Comment {
  _id: String!
  postedBy: User!
  text: String!
  createdAt: DateTime!
}

type Post {
  _id: String!
  text: String
  photo: String!
  likes: [User!]!
  comments: [Comment!]!
  postedBy: User!
  createdAt: DateTime!
}

type Feed {
  data: [Post!]!
  nextCursor: String
}

type Query {
  userById(userId: String!): User!
  userByUsername(username: String!, userReq: String): Username!

  """Obtiene busqueda de los usuario por nombre"""
  searchUsers(search: String!): [User]!
  followers(cursor: String, idUserReq: String!, idUser: String!): FollowersPaginate!
  following(cursor: String, idUserReq: String!, idUser: String!): FollowingPaginate!
  postsByUsername(username: String!): [Post!]!
  feed(feedInput: FeedInput!): Feed!
}

input FeedInput {
  cursor: String
}

type Mutation {
  createUser(createUserData: CreateUserInput!): User!
  deleteUser(deleteUserData: DeleteUserInput!): User!
  login(loginUserData: LoginUserInput!): Login!
  follow(_id: String!): Follow!
  unFollow(_id: String!): UnFollow!
  createPost(createPostData: CreatePostInput!): Post!
  commentPost(createCommentData: CreateCommentInput!): Post!
  deleteCommentPost(deleteCommentData: DeleteCommentInput!): Boolean!
  likePost(idPost: String!): Post!
  dislikePost(idPost: String!): Post!
}

input CreateUserInput {
  email: String!
  name: String!
  avatar: String
  password: String!
  username: String!
}

input DeleteUserInput {
  _id: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreatePostInput {
  text: String
  photo: String!
  postedBy: String!
}

input CreateCommentInput {
  idPost: String!
  text: String!
}

input DeleteCommentInput {
  idPost: String!
  idPostedBy: String!
  idComment: String!
}
